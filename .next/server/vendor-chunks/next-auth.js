"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-auth";
exports.ids = ["vendor-chunks/next-auth"];
exports.modules = {

/***/ "(action-browser)/./node_modules/next-auth/index.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthError: () => (/* reexport safe */ _auth_core_errors__WEBPACK_IMPORTED_MODULE_4__.AuthError),\n/* harmony export */   \"default\": () => (/* binding */ NextAuth)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(action-browser)/./node_modules/@auth/core/index.js\");\n/* harmony import */ var _lib_env_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/env.js */ \"(action-browser)/./node_modules/next-auth/lib/env.js\");\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/index.js */ \"(action-browser)/./node_modules/next-auth/lib/index.js\");\n/* harmony import */ var _lib_actions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/actions.js */ \"(action-browser)/./node_modules/next-auth/lib/actions.js\");\n/* harmony import */ var _auth_core_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @auth/core/errors */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/**\n * _If you are looking to migrate from v4, visit the [Upgrade Guide (v5)](https://authjs.dev/guides/upgrade-to-v5)._\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install next-auth@beta\n * ```\n *\n * ## Environment variable inferrence\n *\n * `NEXTAUTH_URL` and `NEXTAUTH_SECRET` have been inferred since v4.\n *\n * Since NextAuth.js v5 can also automatically infer environment variables that are prefiexed with `AUTH_`.\n *\n * For example `AUTH_GITHUB_ID` and `AUTH_GITHUB_SECRET` will be used as the `clientId` and `clientSecret` options for the GitHub provider.\n *\n * :::tip\n * The environment variable name inferring has the following format for OAuth providers: `AUTH_{PROVIDER}_{ID|SECRET}`.\n *\n * `PROVIDER` is the uppercase snake case version of the provider's id, followed by either `ID` or `SECRET` respectively.\n * :::\n *\n * `AUTH_SECRET` and `AUTH_URL` are also aliased for `NEXTAUTH_SECRET` and `NEXTAUTH_URL` for consistency.\n *\n * To add social login to your app, the configuration becomes:\n *\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"next-auth/providers/github\"\n * export const { handlers, auth } = NextAuth({ providers: [ GitHub ] })\n * ```\n *\n * And the `.env.local` file:\n *\n * ```sh title=\".env.local\"\n * AUTH_GITHUB_ID=...\n * AUTH_GITHUB_SECRET=...\n * AUTH_SECRET=...\n * ```\n *\n * :::tip\n * In production, `AUTH_SECRET` is a required environment variable - if not set, NextAuth.js will throw an error. See [MissingSecretError](https://authjs.dev/reference/core/errors#missingsecret) for more details.\n * :::\n *\n * If you need to override the default values for a provider, you can still call it as a function `GitHub({...})` as before.\n *\n * @module next-auth\n */ \n\n\n\n\n/**\n *  Initialize NextAuth.js.\n *\n *  @example\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"@auth/core/providers/github\"\n *\n * export const { handlers, auth } = NextAuth({ providers: [GitHub] })\n * ```\n */ function NextAuth(config) {\n    (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(config);\n    const httpHandler = (req)=>(0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)((0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.reqWithEnvUrl)(req), config);\n    return {\n        handlers: {\n            GET: httpHandler,\n            POST: httpHandler\n        },\n        // @ts-expect-error\n        auth: (0,_lib_index_js__WEBPACK_IMPORTED_MODULE_2__.initAuth)(config),\n        signIn: (provider, options, authorizationParams)=>{\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signIn)(provider, options, authorizationParams, config);\n        },\n        signOut: (options)=>{\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signOut)(options, config);\n        },\n        update: (data)=>{\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.update)(data, config);\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FnREMsR0FDaUM7QUFDMkI7QUFDbkI7QUFDaUI7QUFDYjtBQUM5Qzs7Ozs7Ozs7OztDQVVDLEdBQ2MsU0FBU1EsU0FBU0MsTUFBTTtJQUNuQ1AsMkRBQWNBLENBQUNPO0lBQ2YsTUFBTUMsY0FBYyxDQUFDQyxNQUFRWCxnREFBSUEsQ0FBQ0MsMERBQWFBLENBQUNVLE1BQU1GO0lBQ3RELE9BQU87UUFDSEcsVUFBVTtZQUFFQyxLQUFLSDtZQUFhSSxNQUFNSjtRQUFZO1FBQ2hELG1CQUFtQjtRQUNuQkssTUFBTVosdURBQVFBLENBQUNNO1FBQ2ZMLFFBQVEsQ0FBQ1ksVUFBVUMsU0FBU0M7WUFDeEIsT0FBT2QsdURBQU1BLENBQUNZLFVBQVVDLFNBQVNDLHFCQUFxQlQ7UUFDMUQ7UUFDQUosU0FBUyxDQUFDWTtZQUNOLE9BQU9aLHdEQUFPQSxDQUFDWSxTQUFTUjtRQUM1QjtRQUNBSCxRQUFRLENBQUNhO1lBQ0wsT0FBT2IsdURBQU1BLENBQUNhLE1BQU1WO1FBQ3hCO0lBQ0o7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvaW5kZXguanM/OTYwOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIF9JZiB5b3UgYXJlIGxvb2tpbmcgdG8gbWlncmF0ZSBmcm9tIHY0LCB2aXNpdCB0aGUgW1VwZ3JhZGUgR3VpZGUgKHY1KV0oaHR0cHM6Ly9hdXRoanMuZGV2L2d1aWRlcy91cGdyYWRlLXRvLXY1KS5fXG4gKlxuICogIyMgSW5zdGFsbGF0aW9uXG4gKlxuICogYGBgYmFzaCBucG0yeWFyblxuICogbnBtIGluc3RhbGwgbmV4dC1hdXRoQGJldGFcbiAqIGBgYFxuICpcbiAqICMjIEVudmlyb25tZW50IHZhcmlhYmxlIGluZmVycmVuY2VcbiAqXG4gKiBgTkVYVEFVVEhfVVJMYCBhbmQgYE5FWFRBVVRIX1NFQ1JFVGAgaGF2ZSBiZWVuIGluZmVycmVkIHNpbmNlIHY0LlxuICpcbiAqIFNpbmNlIE5leHRBdXRoLmpzIHY1IGNhbiBhbHNvIGF1dG9tYXRpY2FsbHkgaW5mZXIgZW52aXJvbm1lbnQgdmFyaWFibGVzIHRoYXQgYXJlIHByZWZpZXhlZCB3aXRoIGBBVVRIX2AuXG4gKlxuICogRm9yIGV4YW1wbGUgYEFVVEhfR0lUSFVCX0lEYCBhbmQgYEFVVEhfR0lUSFVCX1NFQ1JFVGAgd2lsbCBiZSB1c2VkIGFzIHRoZSBgY2xpZW50SWRgIGFuZCBgY2xpZW50U2VjcmV0YCBvcHRpb25zIGZvciB0aGUgR2l0SHViIHByb3ZpZGVyLlxuICpcbiAqIDo6OnRpcFxuICogVGhlIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWUgaW5mZXJyaW5nIGhhcyB0aGUgZm9sbG93aW5nIGZvcm1hdCBmb3IgT0F1dGggcHJvdmlkZXJzOiBgQVVUSF97UFJPVklERVJ9X3tJRHxTRUNSRVR9YC5cbiAqXG4gKiBgUFJPVklERVJgIGlzIHRoZSB1cHBlcmNhc2Ugc25ha2UgY2FzZSB2ZXJzaW9uIG9mIHRoZSBwcm92aWRlcidzIGlkLCBmb2xsb3dlZCBieSBlaXRoZXIgYElEYCBvciBgU0VDUkVUYCByZXNwZWN0aXZlbHkuXG4gKiA6OjpcbiAqXG4gKiBgQVVUSF9TRUNSRVRgIGFuZCBgQVVUSF9VUkxgIGFyZSBhbHNvIGFsaWFzZWQgZm9yIGBORVhUQVVUSF9TRUNSRVRgIGFuZCBgTkVYVEFVVEhfVVJMYCBmb3IgY29uc2lzdGVuY3kuXG4gKlxuICogVG8gYWRkIHNvY2lhbCBsb2dpbiB0byB5b3VyIGFwcCwgdGhlIGNvbmZpZ3VyYXRpb24gYmVjb21lczpcbiAqXG4gKiBgYGB0cyB0aXRsZT1cImF1dGgudHNcIlxuICogaW1wb3J0IE5leHRBdXRoIGZyb20gXCJuZXh0LWF1dGhcIlxuICogaW1wb3J0IEdpdEh1YiBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9naXRodWJcIlxuICogZXhwb3J0IGNvbnN0IHsgaGFuZGxlcnMsIGF1dGggfSA9IE5leHRBdXRoKHsgcHJvdmlkZXJzOiBbIEdpdEh1YiBdIH0pXG4gKiBgYGBcbiAqXG4gKiBBbmQgdGhlIGAuZW52LmxvY2FsYCBmaWxlOlxuICpcbiAqIGBgYHNoIHRpdGxlPVwiLmVudi5sb2NhbFwiXG4gKiBBVVRIX0dJVEhVQl9JRD0uLi5cbiAqIEFVVEhfR0lUSFVCX1NFQ1JFVD0uLi5cbiAqIEFVVEhfU0VDUkVUPS4uLlxuICogYGBgXG4gKlxuICogOjo6dGlwXG4gKiBJbiBwcm9kdWN0aW9uLCBgQVVUSF9TRUNSRVRgIGlzIGEgcmVxdWlyZWQgZW52aXJvbm1lbnQgdmFyaWFibGUgLSBpZiBub3Qgc2V0LCBOZXh0QXV0aC5qcyB3aWxsIHRocm93IGFuIGVycm9yLiBTZWUgW01pc3NpbmdTZWNyZXRFcnJvcl0oaHR0cHM6Ly9hdXRoanMuZGV2L3JlZmVyZW5jZS9jb3JlL2Vycm9ycyNtaXNzaW5nc2VjcmV0KSBmb3IgbW9yZSBkZXRhaWxzLlxuICogOjo6XG4gKlxuICogSWYgeW91IG5lZWQgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgdmFsdWVzIGZvciBhIHByb3ZpZGVyLCB5b3UgY2FuIHN0aWxsIGNhbGwgaXQgYXMgYSBmdW5jdGlvbiBgR2l0SHViKHsuLi59KWAgYXMgYmVmb3JlLlxuICpcbiAqIEBtb2R1bGUgbmV4dC1hdXRoXG4gKi9cbmltcG9ydCB7IEF1dGggfSBmcm9tIFwiQGF1dGgvY29yZVwiO1xuaW1wb3J0IHsgcmVxV2l0aEVudlVybCwgc2V0RW52RGVmYXVsdHMgfSBmcm9tIFwiLi9saWIvZW52LmpzXCI7XG5pbXBvcnQgeyBpbml0QXV0aCB9IGZyb20gXCIuL2xpYi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgc2lnbkluLCBzaWduT3V0LCB1cGRhdGUgfSBmcm9tIFwiLi9saWIvYWN0aW9ucy5qc1wiO1xuZXhwb3J0IHsgQXV0aEVycm9yIH0gZnJvbSBcIkBhdXRoL2NvcmUvZXJyb3JzXCI7XG4vKipcbiAqICBJbml0aWFsaXplIE5leHRBdXRoLmpzLlxuICpcbiAqICBAZXhhbXBsZVxuICogYGBgdHMgdGl0bGU9XCJhdXRoLnRzXCJcbiAqIGltcG9ydCBOZXh0QXV0aCBmcm9tIFwibmV4dC1hdXRoXCJcbiAqIGltcG9ydCBHaXRIdWIgZnJvbSBcIkBhdXRoL2NvcmUvcHJvdmlkZXJzL2dpdGh1YlwiXG4gKlxuICogZXhwb3J0IGNvbnN0IHsgaGFuZGxlcnMsIGF1dGggfSA9IE5leHRBdXRoKHsgcHJvdmlkZXJzOiBbR2l0SHViXSB9KVxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5leHRBdXRoKGNvbmZpZykge1xuICAgIHNldEVudkRlZmF1bHRzKGNvbmZpZyk7XG4gICAgY29uc3QgaHR0cEhhbmRsZXIgPSAocmVxKSA9PiBBdXRoKHJlcVdpdGhFbnZVcmwocmVxKSwgY29uZmlnKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBoYW5kbGVyczogeyBHRVQ6IGh0dHBIYW5kbGVyLCBQT1NUOiBodHRwSGFuZGxlciB9LFxuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gICAgICAgIGF1dGg6IGluaXRBdXRoKGNvbmZpZyksXG4gICAgICAgIHNpZ25JbjogKHByb3ZpZGVyLCBvcHRpb25zLCBhdXRob3JpemF0aW9uUGFyYW1zKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gc2lnbkluKHByb3ZpZGVyLCBvcHRpb25zLCBhdXRob3JpemF0aW9uUGFyYW1zLCBjb25maWcpO1xuICAgICAgICB9LFxuICAgICAgICBzaWduT3V0OiAob3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHNpZ25PdXQob3B0aW9ucywgY29uZmlnKTtcbiAgICAgICAgfSxcbiAgICAgICAgdXBkYXRlOiAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHVwZGF0ZShkYXRhLCBjb25maWcpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOlsiQXV0aCIsInJlcVdpdGhFbnZVcmwiLCJzZXRFbnZEZWZhdWx0cyIsImluaXRBdXRoIiwic2lnbkluIiwic2lnbk91dCIsInVwZGF0ZSIsIkF1dGhFcnJvciIsIk5leHRBdXRoIiwiY29uZmlnIiwiaHR0cEhhbmRsZXIiLCJyZXEiLCJoYW5kbGVycyIsIkdFVCIsIlBPU1QiLCJhdXRoIiwicHJvdmlkZXIiLCJvcHRpb25zIiwiYXV0aG9yaXphdGlvblBhcmFtcyIsImRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/next-auth/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/next-auth/lib/actions.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/lib/actions.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut),\n/* harmony export */   update: () => (/* binding */ update)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(action-browser)/./node_modules/@auth/core/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(action-browser)/./node_modules/next/headers.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(action-browser)/./node_modules/next/navigation.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./env.js */ \"(action-browser)/./node_modules/next-auth/lib/env.js\");\n\n\n\n\nasync function signIn(provider, options = {}, authorizationParams, config) {\n    const headers = new Headers((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    const { redirect: shouldRedirect = true, redirectTo, ...rest } = options instanceof FormData ? Object.fromEntries(options) : options;\n    const callbackUrl = redirectTo?.toString() ?? headers.get(\"Referer\") ?? \"/\";\n    const base = authUrl((0,_env_js__WEBPACK_IMPORTED_MODULE_3__.detectOrigin)(headers), \"signin\");\n    if (!provider) {\n        const url = `${base}?${new URLSearchParams({\n            callbackUrl\n        })}`;\n        if (shouldRedirect) (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(url);\n        return url;\n    }\n    let url = `${base}/${provider}?${new URLSearchParams(authorizationParams)}`;\n    let foundProvider = undefined;\n    for (const _provider of config.providers){\n        const { id } = typeof _provider === \"function\" ? _provider?.() : _provider;\n        if (id === provider) {\n            foundProvider = id;\n            break;\n        }\n    }\n    if (!foundProvider) {\n        const url = `${base}?${new URLSearchParams({\n            callbackUrl\n        })}`;\n        if (shouldRedirect) (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(url);\n        return url;\n    }\n    if (foundProvider === \"credentials\") {\n        url = url.replace(\"signin\", \"callback\");\n    }\n    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const body = new URLSearchParams({\n        ...rest,\n        callbackUrl\n    });\n    const req = new Request(url, {\n        method: \"POST\",\n        headers,\n        body\n    });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, {\n        ...config,\n        raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw,\n        skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck\n    });\n    for (const c of res?.cookies ?? [])(0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    if (shouldRedirect) return (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(res.redirect);\n    return res.redirect;\n}\nasync function signOut(options, config) {\n    const headers = new Headers((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const url = authUrl((0,_env_js__WEBPACK_IMPORTED_MODULE_3__.detectOrigin)(headers), \"signout\");\n    const callbackUrl = options?.redirectTo ?? headers.get(\"Referer\") ?? \"/\";\n    const body = new URLSearchParams({\n        callbackUrl\n    });\n    const req = new Request(url, {\n        method: \"POST\",\n        headers,\n        body\n    });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, {\n        ...config,\n        raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw,\n        skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck\n    });\n    for (const c of res?.cookies ?? [])(0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    if (options?.redirect ?? true) return (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(res.redirect);\n    return res;\n}\nasync function update(data, config) {\n    const headers = new Headers((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    headers.set(\"Content-Type\", \"application/json\");\n    const url = authUrl((0,_env_js__WEBPACK_IMPORTED_MODULE_3__.detectOrigin)(headers), \"session\");\n    const body = JSON.stringify({\n        data\n    });\n    const req = new Request(url, {\n        method: \"POST\",\n        headers,\n        body\n    });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, {\n        ...config,\n        raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw,\n        skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck\n    });\n    for (const c of res?.cookies ?? [])(0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    return res.body;\n}\n/** Determine an action's URL */ function authUrl(base, action) {\n    let pathname;\n    if (base.pathname === \"/\") pathname ?? (pathname = `/api/auth/${action}`);\n    else pathname ?? (pathname = `${base.pathname}/${action}`);\n    return new URL(pathname, base.origin);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/next-auth/lib/actions.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/next-auth/lib/env.js":
/*!*******************************************!*\
  !*** ./node_modules/next-auth/lib/env.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectOrigin: () => (/* binding */ detectOrigin),\n/* harmony export */   reqWithEnvUrl: () => (/* binding */ reqWithEnvUrl),\n/* harmony export */   setEnvDefaults: () => (/* binding */ setEnvDefaults)\n/* harmony export */ });\nfunction setEnvDefaults(config) {\n    config.secret ?? (config.secret = process.env.AUTH_SECRET ?? process.env.NEXTAUTH_SECRET);\n    config.trustHost ?? (config.trustHost = !!(process.env.AUTH_URL ?? process.env.NEXTAUTH_URL ?? process.env.AUTH_TRUST_HOST ?? process.env.VERCEL ?? \"development\" !== \"production\"));\n    config.redirectProxyUrl ?? (config.redirectProxyUrl = process.env.AUTH_REDIRECT_PROXY_URL);\n    config.providers = config.providers.map((p)=>{\n        const finalProvider = typeof p === \"function\" ? p({}) : p;\n        if (finalProvider.type === \"oauth\" || finalProvider.type === \"oidc\") {\n            const ID = finalProvider.id.toUpperCase();\n            finalProvider.clientId ?? (finalProvider.clientId = process.env[`AUTH_${ID}_ID`]);\n            finalProvider.clientSecret ?? (finalProvider.clientSecret = process.env[`AUTH_${ID}_SECRET`]);\n            if (finalProvider.type === \"oidc\") {\n                finalProvider.issuer ?? (finalProvider.issuer = process.env[`AUTH_${ID}_ISSUER`]);\n            }\n        }\n        return finalProvider;\n    });\n}\n/**\n * Extract the origin from `NEXTAUTH_URL` or `AUTH_URL`\n * environment variables, or the request's headers.\n */ function detectOrigin(h) {\n    const url = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n    if (url) return new URL(url);\n    const host = h.get(\"x-forwarded-host\") ?? h.get(\"host\");\n    const protocol = h.get(\"x-forwarded-proto\") === \"http\" ? \"http\" : \"https\";\n    return new URL(`${protocol}://${host}`);\n}\n/** If `NEXTAUTH_URL` or `AUTH_URL` is defined, override the request's URL. */ function reqWithEnvUrl(req) {\n    const url = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n    if (!url) return req;\n    const base = new URL(url).origin;\n    // REVIEW: Bug in Next.js?: TypeError: next_dist_server_web_exports_next_request__WEBPACK_IMPORTED_MODULE_0__ is not a constructor\n    // return new NextRequest(new URL(nonBase, base), req)\n    const _url = req.nextUrl.clone();\n    _url.href = req.nextUrl.href.replace(req.nextUrl.origin, base);\n    const _req = new Request(_url, req);\n    _req.nextUrl = _url;\n    return _req;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbGliL2Vudi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxTQUFTQSxlQUFlQyxNQUFNO0lBQ2pDQSxPQUFPQyxNQUFNLElBQUtELENBQUFBLE9BQU9DLE1BQU0sR0FBR0MsUUFBUUMsR0FBRyxDQUFDQyxXQUFXLElBQUlGLFFBQVFDLEdBQUcsQ0FBQ0UsZUFBZTtJQUN4RkwsT0FBT00sU0FBUyxJQUFLTixDQUFBQSxPQUFPTSxTQUFTLEdBQUcsQ0FBQyxDQUFFSixDQUFBQSxRQUFRQyxHQUFHLENBQUNJLFFBQVEsSUFDM0RMLFFBQVFDLEdBQUcsQ0FBQ0ssWUFBWSxJQUN4Qk4sUUFBUUMsR0FBRyxDQUFDTSxlQUFlLElBQzNCUCxRQUFRQyxHQUFHLENBQUNPLE1BQU0sSUFDbEJSLGtCQUF5QixZQUFXLENBQUM7SUFDekNGLE9BQU9XLGdCQUFnQixJQUFLWCxDQUFBQSxPQUFPVyxnQkFBZ0IsR0FBR1QsUUFBUUMsR0FBRyxDQUFDUyx1QkFBdUI7SUFDekZaLE9BQU9hLFNBQVMsR0FBR2IsT0FBT2EsU0FBUyxDQUFDQyxHQUFHLENBQUMsQ0FBQ0M7UUFDckMsTUFBTUMsZ0JBQWdCLE9BQU9ELE1BQU0sYUFBYUEsRUFBRSxDQUFDLEtBQUtBO1FBQ3hELElBQUlDLGNBQWNDLElBQUksS0FBSyxXQUFXRCxjQUFjQyxJQUFJLEtBQUssUUFBUTtZQUNqRSxNQUFNQyxLQUFLRixjQUFjRyxFQUFFLENBQUNDLFdBQVc7WUFDdkNKLGNBQWNLLFFBQVEsSUFBS0wsQ0FBQUEsY0FBY0ssUUFBUSxHQUFHbkIsUUFBUUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFZSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQ2hGRixjQUFjTSxZQUFZLElBQUtOLENBQUFBLGNBQWNNLFlBQVksR0FBR3BCLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRWUsR0FBRyxPQUFPLENBQUMsQ0FBQztZQUM1RixJQUFJRixjQUFjQyxJQUFJLEtBQUssUUFBUTtnQkFDL0JELGNBQWNPLE1BQU0sSUFBS1AsQ0FBQUEsY0FBY08sTUFBTSxHQUFHckIsUUFBUUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFZSxHQUFHLE9BQU8sQ0FBQyxDQUFDO1lBQ3BGO1FBQ0o7UUFDQSxPQUFPRjtJQUNYO0FBQ0o7QUFDQTs7O0NBR0MsR0FDTSxTQUFTUSxhQUFhQyxDQUFDO0lBQzFCLE1BQU1DLE1BQU14QixRQUFRQyxHQUFHLENBQUNJLFFBQVEsSUFBSUwsUUFBUUMsR0FBRyxDQUFDSyxZQUFZO0lBQzVELElBQUlrQixLQUNBLE9BQU8sSUFBSUMsSUFBSUQ7SUFDbkIsTUFBTUUsT0FBT0gsRUFBRUksR0FBRyxDQUFDLHVCQUF1QkosRUFBRUksR0FBRyxDQUFDO0lBQ2hELE1BQU1DLFdBQVdMLEVBQUVJLEdBQUcsQ0FBQyx5QkFBeUIsU0FBUyxTQUFTO0lBQ2xFLE9BQU8sSUFBSUYsSUFBSSxDQUFDLEVBQUVHLFNBQVMsR0FBRyxFQUFFRixLQUFLLENBQUM7QUFDMUM7QUFDQSw0RUFBNEUsR0FDckUsU0FBU0csY0FBY0MsR0FBRztJQUM3QixNQUFNTixNQUFNeEIsUUFBUUMsR0FBRyxDQUFDSSxRQUFRLElBQUlMLFFBQVFDLEdBQUcsQ0FBQ0ssWUFBWTtJQUM1RCxJQUFJLENBQUNrQixLQUNELE9BQU9NO0lBQ1gsTUFBTUMsT0FBTyxJQUFJTixJQUFJRCxLQUFLUSxNQUFNO0lBQ2hDLGtJQUFrSTtJQUNsSSxzREFBc0Q7SUFDdEQsTUFBTUMsT0FBT0gsSUFBSUksT0FBTyxDQUFDQyxLQUFLO0lBQzlCRixLQUFLRyxJQUFJLEdBQUdOLElBQUlJLE9BQU8sQ0FBQ0UsSUFBSSxDQUFDQyxPQUFPLENBQUNQLElBQUlJLE9BQU8sQ0FBQ0YsTUFBTSxFQUFFRDtJQUN6RCxNQUFNTyxPQUFPLElBQUlDLFFBQVFOLE1BQU1IO0lBQy9CUSxLQUFLSixPQUFPLEdBQUdEO0lBQ2YsT0FBT0s7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbGliL2Vudi5qcz81OGFmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBzZXRFbnZEZWZhdWx0cyhjb25maWcpIHtcbiAgICBjb25maWcuc2VjcmV0ID8/IChjb25maWcuc2VjcmV0ID0gcHJvY2Vzcy5lbnYuQVVUSF9TRUNSRVQgPz8gcHJvY2Vzcy5lbnYuTkVYVEFVVEhfU0VDUkVUKTtcbiAgICBjb25maWcudHJ1c3RIb3N0ID8/IChjb25maWcudHJ1c3RIb3N0ID0gISEocHJvY2Vzcy5lbnYuQVVUSF9VUkwgPz9cbiAgICAgICAgcHJvY2Vzcy5lbnYuTkVYVEFVVEhfVVJMID8/XG4gICAgICAgIHByb2Nlc3MuZW52LkFVVEhfVFJVU1RfSE9TVCA/P1xuICAgICAgICBwcm9jZXNzLmVudi5WRVJDRUwgPz9cbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSk7XG4gICAgY29uZmlnLnJlZGlyZWN0UHJveHlVcmwgPz8gKGNvbmZpZy5yZWRpcmVjdFByb3h5VXJsID0gcHJvY2Vzcy5lbnYuQVVUSF9SRURJUkVDVF9QUk9YWV9VUkwpO1xuICAgIGNvbmZpZy5wcm92aWRlcnMgPSBjb25maWcucHJvdmlkZXJzLm1hcCgocCkgPT4ge1xuICAgICAgICBjb25zdCBmaW5hbFByb3ZpZGVyID0gdHlwZW9mIHAgPT09IFwiZnVuY3Rpb25cIiA/IHAoe30pIDogcDtcbiAgICAgICAgaWYgKGZpbmFsUHJvdmlkZXIudHlwZSA9PT0gXCJvYXV0aFwiIHx8IGZpbmFsUHJvdmlkZXIudHlwZSA9PT0gXCJvaWRjXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IElEID0gZmluYWxQcm92aWRlci5pZC50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgZmluYWxQcm92aWRlci5jbGllbnRJZCA/PyAoZmluYWxQcm92aWRlci5jbGllbnRJZCA9IHByb2Nlc3MuZW52W2BBVVRIXyR7SUR9X0lEYF0pO1xuICAgICAgICAgICAgZmluYWxQcm92aWRlci5jbGllbnRTZWNyZXQgPz8gKGZpbmFsUHJvdmlkZXIuY2xpZW50U2VjcmV0ID0gcHJvY2Vzcy5lbnZbYEFVVEhfJHtJRH1fU0VDUkVUYF0pO1xuICAgICAgICAgICAgaWYgKGZpbmFsUHJvdmlkZXIudHlwZSA9PT0gXCJvaWRjXCIpIHtcbiAgICAgICAgICAgICAgICBmaW5hbFByb3ZpZGVyLmlzc3VlciA/PyAoZmluYWxQcm92aWRlci5pc3N1ZXIgPSBwcm9jZXNzLmVudltgQVVUSF8ke0lEfV9JU1NVRVJgXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZpbmFsUHJvdmlkZXI7XG4gICAgfSk7XG59XG4vKipcbiAqIEV4dHJhY3QgdGhlIG9yaWdpbiBmcm9tIGBORVhUQVVUSF9VUkxgIG9yIGBBVVRIX1VSTGBcbiAqIGVudmlyb25tZW50IHZhcmlhYmxlcywgb3IgdGhlIHJlcXVlc3QncyBoZWFkZXJzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGV0ZWN0T3JpZ2luKGgpIHtcbiAgICBjb25zdCB1cmwgPSBwcm9jZXNzLmVudi5BVVRIX1VSTCA/PyBwcm9jZXNzLmVudi5ORVhUQVVUSF9VUkw7XG4gICAgaWYgKHVybClcbiAgICAgICAgcmV0dXJuIG5ldyBVUkwodXJsKTtcbiAgICBjb25zdCBob3N0ID0gaC5nZXQoXCJ4LWZvcndhcmRlZC1ob3N0XCIpID8/IGguZ2V0KFwiaG9zdFwiKTtcbiAgICBjb25zdCBwcm90b2NvbCA9IGguZ2V0KFwieC1mb3J3YXJkZWQtcHJvdG9cIikgPT09IFwiaHR0cFwiID8gXCJodHRwXCIgOiBcImh0dHBzXCI7XG4gICAgcmV0dXJuIG5ldyBVUkwoYCR7cHJvdG9jb2x9Oi8vJHtob3N0fWApO1xufVxuLyoqIElmIGBORVhUQVVUSF9VUkxgIG9yIGBBVVRIX1VSTGAgaXMgZGVmaW5lZCwgb3ZlcnJpZGUgdGhlIHJlcXVlc3QncyBVUkwuICovXG5leHBvcnQgZnVuY3Rpb24gcmVxV2l0aEVudlVybChyZXEpIHtcbiAgICBjb25zdCB1cmwgPSBwcm9jZXNzLmVudi5BVVRIX1VSTCA/PyBwcm9jZXNzLmVudi5ORVhUQVVUSF9VUkw7XG4gICAgaWYgKCF1cmwpXG4gICAgICAgIHJldHVybiByZXE7XG4gICAgY29uc3QgYmFzZSA9IG5ldyBVUkwodXJsKS5vcmlnaW47XG4gICAgLy8gUkVWSUVXOiBCdWcgaW4gTmV4dC5qcz86IFR5cGVFcnJvcjogbmV4dF9kaXN0X3NlcnZlcl93ZWJfZXhwb3J0c19uZXh0X3JlcXVlc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyBpcyBub3QgYSBjb25zdHJ1Y3RvclxuICAgIC8vIHJldHVybiBuZXcgTmV4dFJlcXVlc3QobmV3IFVSTChub25CYXNlLCBiYXNlKSwgcmVxKVxuICAgIGNvbnN0IF91cmwgPSByZXEubmV4dFVybC5jbG9uZSgpO1xuICAgIF91cmwuaHJlZiA9IHJlcS5uZXh0VXJsLmhyZWYucmVwbGFjZShyZXEubmV4dFVybC5vcmlnaW4sIGJhc2UpO1xuICAgIGNvbnN0IF9yZXEgPSBuZXcgUmVxdWVzdChfdXJsLCByZXEpO1xuICAgIF9yZXEubmV4dFVybCA9IF91cmw7XG4gICAgcmV0dXJuIF9yZXE7XG59XG4iXSwibmFtZXMiOlsic2V0RW52RGVmYXVsdHMiLCJjb25maWciLCJzZWNyZXQiLCJwcm9jZXNzIiwiZW52IiwiQVVUSF9TRUNSRVQiLCJORVhUQVVUSF9TRUNSRVQiLCJ0cnVzdEhvc3QiLCJBVVRIX1VSTCIsIk5FWFRBVVRIX1VSTCIsIkFVVEhfVFJVU1RfSE9TVCIsIlZFUkNFTCIsInJlZGlyZWN0UHJveHlVcmwiLCJBVVRIX1JFRElSRUNUX1BST1hZX1VSTCIsInByb3ZpZGVycyIsIm1hcCIsInAiLCJmaW5hbFByb3ZpZGVyIiwidHlwZSIsIklEIiwiaWQiLCJ0b1VwcGVyQ2FzZSIsImNsaWVudElkIiwiY2xpZW50U2VjcmV0IiwiaXNzdWVyIiwiZGV0ZWN0T3JpZ2luIiwiaCIsInVybCIsIlVSTCIsImhvc3QiLCJnZXQiLCJwcm90b2NvbCIsInJlcVdpdGhFbnZVcmwiLCJyZXEiLCJiYXNlIiwib3JpZ2luIiwiX3VybCIsIm5leHRVcmwiLCJjbG9uZSIsImhyZWYiLCJyZXBsYWNlIiwiX3JlcSIsIlJlcXVlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/next-auth/lib/env.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/next-auth/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/lib/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initAuth: () => (/* binding */ initAuth)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(action-browser)/./node_modules/@auth/core/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(action-browser)/./node_modules/next/headers.js\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(action-browser)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./env.js */ \"(action-browser)/./node_modules/next-auth/lib/env.js\");\n\n\n\n\n/** Server-side method to read the session. */ async function getSession(headers, config) {\n    const origin = (0,_env_js__WEBPACK_IMPORTED_MODULE_3__.detectOrigin)(headers);\n    const request = new Request(`${origin}/session`, {\n        headers: {\n            cookie: headers.get(\"cookie\") ?? \"\"\n        }\n    });\n    return (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(request, {\n        ...config,\n        callbacks: {\n            ...config.callbacks,\n            // Since we are server-side, we don't need to filter out the session data\n            // See https://authjs.dev/guides/upgrade-to-v5/v5#authenticating-server-side\n            // TODO: Taint the session data to prevent accidental leakage to the client\n            // https://react.devreference/nextjs/react/experimental_taintObjectReference\n            async session (...args) {\n                const session = // If the user defined a custom session callback, use that instead\n                await config.callbacks?.session?.(...args) ?? args[0].session;\n                const user = args[0].user ?? args[0].token;\n                return {\n                    user,\n                    ...session\n                };\n            }\n        }\n    });\n}\nfunction isReqWrapper(arg) {\n    return typeof arg === \"function\";\n}\nfunction initAuth(config) {\n    return (...args)=>{\n        if (!args.length) {\n            // React Server Components\n            return getSession((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)(), config).then((r)=>r.json());\n        }\n        if (args[0] instanceof Request) {\n            // middleare.ts\n            // export { auth as default } from \"auth\"\n            const req = args[0];\n            const ev = args[1];\n            return handleAuth([\n                req,\n                ev\n            ], config);\n        }\n        if (isReqWrapper(args[0])) {\n            // middleware.ts/router.ts\n            // import { auth } from \"auth\"\n            // export default auth((req) => { console.log(req.auth) }})\n            const userMiddlewareOrRoute = args[0];\n            return async (...args)=>{\n                return handleAuth(args, config, userMiddlewareOrRoute);\n            };\n        }\n        // API Routes, getServerSideProps\n        const request = \"req\" in args[0] ? args[0].req : args[0];\n        const response = \"res\" in args[0] ? args[0].res : args[1];\n        return getSession(// @ts-expect-error\n        new Headers(request.headers), config).then(async (authResponse)=>{\n            const auth = await authResponse.json();\n            for (const cookie of authResponse.headers.getSetCookie())response.headers.append(\"set-cookie\", cookie);\n            return auth;\n        });\n    };\n}\nasync function handleAuth(args, config, userMiddlewareOrRoute) {\n    const request = (0,_env_js__WEBPACK_IMPORTED_MODULE_3__.reqWithEnvUrl)(args[0]);\n    const sessionResponse = await getSession(request.headers, config);\n    const auth = await sessionResponse.json();\n    let authorized = true;\n    if (config.callbacks?.authorized) {\n        authorized = await config.callbacks.authorized({\n            request,\n            auth\n        });\n    }\n    let response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__.next?.();\n    if (authorized instanceof Response) {\n        // User returned a custom response, like redirecting to a page or 401, respect it\n        response = authorized;\n        const redirect = authorized.headers.get(\"Location\");\n        const { pathname } = request.nextUrl;\n        // If the user is redirecting to the same NextAuth.js action path as the current request,\n        // don't allow the redirect to prevent an infinite loop\n        if (redirect && isSameAuthAction(pathname, new URL(redirect).pathname, config)) {\n            authorized = true;\n        }\n    } else if (userMiddlewareOrRoute) {\n        // Execute user's middleware/handler with the augmented request\n        const augmentedReq = request;\n        augmentedReq.auth = auth;\n        response = // @ts-expect-error\n        await userMiddlewareOrRoute(augmentedReq, args[1]) ?? next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__.next();\n    } else if (!authorized) {\n        const signInPage = config.pages?.signIn ?? \"/api/auth/signin\";\n        if (request.nextUrl.pathname !== signInPage) {\n            // Redirect to signin page by default if not authorized\n            const signInUrl = request.nextUrl.clone();\n            signInUrl.pathname = signInPage;\n            signInUrl.searchParams.set(\"callbackUrl\", request.nextUrl.href);\n            response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__.redirect(signInUrl);\n        }\n    }\n    const finalResponse = new Response(response?.body, response);\n    // Preserve cookies from the session response\n    for (const cookie of sessionResponse.headers.getSetCookie())finalResponse.headers.append(\"set-cookie\", cookie);\n    return finalResponse;\n}\nfunction isSameAuthAction(requestPath, redirectPath, config) {\n    const action = redirectPath.replace(`${requestPath}/`, \"\");\n    const pages = Object.values(config.pages ?? {});\n    return (actions.has(action) || pages.includes(redirectPath)) && redirectPath === requestPath;\n}\nconst actions = new Set([\n    \"providers\",\n    \"session\",\n    \"csrf\",\n    \"signin\",\n    \"signout\",\n    \"callback\",\n    \"verify-request\",\n    \"error\"\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/next-auth/lib/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/next-auth/providers/credentials.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/providers/credentials.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _auth_core_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _auth_core_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core/providers/credentials */ \"(action-browser)/./node_modules/@auth/core/providers/credentials.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _auth_core_providers_credentials__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _auth_core_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2NyZWRlbnRpYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlEO0FBQ1UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFscy5qcz83NjM5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCJAYXV0aC9jb3JlL3Byb3ZpZGVycy9jcmVkZW50aWFsc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCJAYXV0aC9jb3JlL3Byb3ZpZGVycy9jcmVkZW50aWFsc1wiO1xuIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/next-auth/providers/credentials.js\n");

/***/ })

};
;